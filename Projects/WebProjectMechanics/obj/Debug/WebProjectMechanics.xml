<?xml version="1.0"?>
<doc>
<assembly>
<name>
WebProjectMechanics
</name>
</assembly>
<members>
<member name="M:WebProjectMechanics.BaseHandler.OnMethodInvoke(WebProjectMechanics.OnMethodInvokeArgs)">
	<summary>
 Intercept the execution right before the handler method is called
 </summary>
	<param name="e"></param>
</member><member name="M:WebProjectMechanics.BaseHandler.AfterMethodInvoke(System.Object)">
	<summary>
 Intercept the execution right after the handler method is called
 </summary>
</member><member name="M:WebProjectMechanics.BaseHandler.HandleRequest">
	<summary>
 Method used to handle the request as a normal ASHX.
 To use this method just pass handlerequest=true on the request query string.
 </summary>
</member><member name="M:WebProjectMechanics.BaseHandler.DefaultContentType">
	<summary>
 Returns the default content type returned by the handler.
 </summary>
	<returns></returns>
</member><member name="P:WebProjectMechanics.BaseHandler.SkipDefaultSerialization">
	<summary>
 Setting this to false will make the handler to respond with exacly what the called method returned.
 If true the handler will try to serialize the content based on the ContentType set.
 </summary>
</member><member name="P:WebProjectMechanics.BaseHandler.SkipContentTypeEvaluation">
	<summary>
 Setting this to true will avoid the handler to change the content type wither to its default value or to its specified value on the request.
 This is useful if you're handling the request yourself and need to specify it yourself.
 </summary>
</member><member name="M:WebProjectMechanics.BaseHandler.Help">
	<summary>
 Prints an help page discribing the available methods on this handler.
 </summary>
	<returns></returns>
</member><member name="T:WebProjectMechanics.RequireAuthenticationAttribute">
	<summary>
 Use this attribute to decorate the handler methods that need explicit authentication configuration.
 If this attibute is set to true it will validate if the user is authenticated.
 </summary>
</member><member name="M:WebProjectMechanics.UtilityRSSTools.RSSFeed.#ctor(System.String)">
	<summary>
 Initializes a new instance of the wpmRSS class. You must enter a feed url as a string.
 </summary>
	<param name="feedurl"></param>
</member><member name="M:WebProjectMechanics.AjaxCallSignature.ProcessProperty(System.String,System.Type,System.String)">
	<summary>
	</summary>
	<param name="propertyName"></param>
	<param name="propertyType"></param>
	<param name="parentNamespace">represents the full path of the parent node of the input parameter</param>
	<returns></returns>
</member><member name="M:WebProjectMechanics.AjaxCallSignature.HydrateValue(System.String,System.Type,System.String)">
	<summary>
 Hydrates CLR primitive types
 </summary>
	<returns></returns>
</member><member name="M:WebProjectMechanics.AjaxCallSignature.HydrateClass(System.String,System.Type,System.String)">
	<summary>
 Hydrates complex types
 </summary>
</member><member name="M:WebProjectMechanics.ApplicationHttpModule.AddWww(System.Web.HttpContext)">
	<summary>
 Adds the www subdomain to the request and redirects.
 </summary>
</member><member name="M:WebProjectMechanics.ApplicationHttpModule.RemoveWww(System.Web.HttpContext)">
	<summary>
 Removes the www subdomain from the request and redirects.
 </summary>
</member><member name="M:WebProjectMechanics.ApplicationHttpModule.PermanentRedirect(System.String,System.Web.HttpContext)">
	<summary>
 Sends permanent redirection headers (301)
 </summary>
</member><member name="M:WebProjectMechanics.UtilityXMLDocument.#ctor(System.String,System.String,System.String,System.String)">
	<summary>
 Initializes a new instance of the UtilityXMLDocument class
 </summary>
</member><member name="M:WebProjectMechanics.UtilityXMLDocument.getMD5Hash(System.String)">
	<summary>
 Get the MD5 Hash of a String
 </summary>
	<param name="strToHash">The String to Hash</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:WebProjectMechanics.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:WebProjectMechanics.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:WebProjectMechanics.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:WebProjectMechanics.ApplicationMasterPage.GetFileMenu">
	<summary>
 GetFileMenu - Returns HTML List of all files in the current directory
 </summary>
	<returns></returns>
</member><member name="M:WebProjectMechanics.ApplicationMasterPage.GetMenuItem(System.String,System.String)">
	<summary>
 Returns a MenuItem for a given name and path
 </summary>
	<param name="MenuName"></param>
	<param name="MenuPath"></param>
	<returns></returns>
</member><member name="T:WebProjectMechanics.ResponseContentTypes">
	<summary>
 Represent the list of supported response content types
 </summary>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
	<summary>
 Change the user password.
 </summary>
	<param name="username">UserName</param>
	<param name="oldPwd">Old password.</param>
	<param name="newPwd">New password.</param>
	<returns>T/F if password was changed.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
	<summary>
 Change the question and answer for a password validation.
 </summary>
	<param name="username">User name.</param>
	<param name="password">Password.</param>
	<param name="newPwdQuestion">New question text.</param>
	<param name="newPwdAnswer">New answer text.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
	<summary>
 Create a new user.
 </summary>
	<param name="username">User name.</param>
	<param name="password">Password.</param>
	<param name="email">Email address.</param>
	<param name="passwordQuestion">Security quesiton for password.</param>
	<param name="passwordAnswer">Security quesiton answer for password.</param>
	<param name="isApproved"></param>
	<param name="userID"></param>
	<param name="status"></param>
	<returns></returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.DeleteUser(System.String,System.Boolean)">
	<summary>
 Delete a user.
 </summary>
	<param name="username">User name.</param>
	<param name="deleteAllRelatedData">Whether to delete all related data.</param>
	<returns>T/F if the user was deleted.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
	<summary>
 Get a collection of users.
 </summary>
	<param name="pageIndex">Page index.</param>
	<param name="pageSize">Page size.</param>
	<param name="totalRecords">Total # of records to retrieve.</param>
	<returns>Collection of MembershipUser objects.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetNumberOfUsersOnline">
	<summary>
 Gets the number of users currently on-line.
 </summary>
	<returns>
 # of users on-line.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetPassword(System.String,System.String)">
	<summary>
 Get the password for a user.
 </summary>
	<param name="username">User name.</param>
	<param name="answer">Answer to security question.</param>
	<returns>Password for the user.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetUser(System.Object,System.Boolean)">
	<summary>
 Get a user based upon provider key and if they are on-line.
 </summary>
	<param name="userID">Provider key.</param>
	<param name="userIsOnline">T/F whether the user is on-line.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.UnlockUser(System.String)">
	<summary>
 Unlock a user.
 </summary>
	<param name="username">User name.</param>
	<returns>T/F if unlocked.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetUserNameByEmail(System.String)">
	<summary>
 Get user name from their email.
 </summary>
	<param name="email">Email address</param>
	<returns>User name.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.ResetPassword(System.String,System.String)">
	<summary>
 Reset the user password.
 </summary>
	<param name="username">User name.</param>
	<param name="answer">Answer to security question.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
	<summary>
 Update the user information.
 </summary>
	<param name="_membershipUser">MembershipUser object containing data.</param>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.ValidateUser(System.String,System.String)">
	<summary>
 Validate the user based upon username and password.
 </summary>
	<param name="username">User name.</param>
	<param name="password">Password.</param>
	<returns>T/F if the user is valid.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
	<summary>
 Find all users matching a search string.
 </summary>
	<param name="usernameToMatch">Search string of user name to match.</param>
	<param name="pageIndex"></param>
	<param name="pageSize"></param>
	<param name="totalRecords">Total records found.</param>
	<returns>Collection of MembershipUser objects.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
	<summary>
 Find all users matching a search string of their email.
 </summary>
	<param name="emailToMatch">Search string of email to match.</param>
	<param name="pageIndex"></param>
	<param name="pageSize"></param>
	<param name="totalRecords">Total records found.</param>
	<returns>Collection of MembershipUser objects.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetUserFromReader(System.Data.SqlClient.SqlDataReader)">
	<summary>
 Create a MembershipUser object from a data reader.
 </summary>
	<param name="_sqlDataReader">Data reader.</param>
	<returns>MembershipUser object.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.HexToByte(System.String)">
	<summary>
 Converts a hexadecimal string to a byte array. Used to convert encryption key values from the configuration
 </summary>
	<param name="hexString"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.UpdateFailureCount(System.String,WebProjectMechanics.ApplicationMembershipProvider.FailureType)">
	<summary>
 Update password and answer failure information.
 </summary>
	<param name="username">User name.</param>
	<param name="failureType">Type of failure</param>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.CheckPassword(System.String,System.String)">
	<summary>
 Check the password format based upon the MembershipPasswordFormat.
 </summary>
	<param name="password">Password</param>
	<param name="dbpassword"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.EncodePassword(System.String)">
	<summary>
 Encode password.
 </summary>
	<param name="password">Password.</param>
	<returns>Encoded password.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.UnEncodePassword(System.String)">
	<summary>
 UnEncode password.
 </summary>
	<param name="encodedPassword">Password.</param>
	<returns>Unencoded password.</returns>
</member><member name="M:WebProjectMechanics.ApplicationMembershipProvider.GetConfigValue(System.String,System.String)">
	<summary>
 GetConfigValue - Checks for blank, returns default if current value is NullorEmpty
 </summary>
	<param name="configValue"></param>
	<param name="defaultValue"></param>
	<returns></returns>
</member>
</members>
</doc>