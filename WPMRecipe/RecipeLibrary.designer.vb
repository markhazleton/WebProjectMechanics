'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="WebProjectMechanics")>  _
Partial Public Class RecipeLibraryDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRecipe(instance As Recipe)
    End Sub
  Partial Private Sub UpdateRecipe(instance As Recipe)
    End Sub
  Partial Private Sub DeleteRecipe(instance As Recipe)
    End Sub
  Partial Private Sub InsertRecipeImage(instance As RecipeImage)
    End Sub
  Partial Private Sub UpdateRecipeImage(instance As RecipeImage)
    End Sub
  Partial Private Sub DeleteRecipeImage(instance As RecipeImage)
    End Sub
  Partial Private Sub InsertRecipeComment(instance As RecipeComment)
    End Sub
  Partial Private Sub UpdateRecipeComment(instance As RecipeComment)
    End Sub
  Partial Private Sub DeleteRecipeComment(instance As RecipeComment)
    End Sub
  Partial Private Sub InsertRecipeCategory(instance As RecipeCategory)
    End Sub
  Partial Private Sub UpdateRecipeCategory(instance As RecipeCategory)
    End Sub
  Partial Private Sub DeleteRecipeCategory(instance As RecipeCategory)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.WPMRecipe.My.MySettings.Default.WebProjectMechanicsConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Recipes() As System.Data.Linq.Table(Of Recipe)
		Get
			Return Me.GetTable(Of Recipe)
		End Get
	End Property
	
	Public ReadOnly Property RecipeImages() As System.Data.Linq.Table(Of RecipeImage)
		Get
			Return Me.GetTable(Of RecipeImage)
		End Get
	End Property
	
	Public ReadOnly Property RecipeComments() As System.Data.Linq.Table(Of RecipeComment)
		Get
			Return Me.GetTable(Of RecipeComment)
		End Get
	End Property
	
	Public ReadOnly Property RecipeCategories() As System.Data.Linq.Table(Of RecipeCategory)
		Get
			Return Me.GetTable(Of RecipeCategory)
		End Get
	End Property
	
	Public ReadOnly Property vwRecipes() As System.Data.Linq.Table(Of vwRecipe)
		Get
			Return Me.GetTable(Of vwRecipe)
		End Get
	End Property
	
	Public ReadOnly Property vwRecipeCategories() As System.Data.Linq.Table(Of vwRecipeCategory)
		Get
			Return Me.GetTable(Of vwRecipeCategory)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Recipe")>  _
Partial Public Class Recipe
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecipeID As Integer
	
	Private _RecipeCategoryID As Integer
	
	Private _RecipeNM As String
	
	Private _RecipeDS As String
	
	Private _AuthorNM As String
	
	Private _IngredientDS As String
	
	Private _InstructionDS As String
	
	Private _IsApproved As Boolean
	
	Private _ModifiedDT As Date
	
	Private _ModifiedID As Integer
	
	Private _ViewCount As Integer
	
	Private _AverageRating As Double
	
	Private _RatingCount As Integer
	
	Private _CommentCount As Integer
	
	Private _LastViewDT As Date
	
	Private _RecipeImages As EntitySet(Of RecipeImage)
	
	Private _RecipeComments As EntitySet(Of RecipeComment)
	
	Private _RecipeCategory As EntityRef(Of RecipeCategory)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecipeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeIDChanged()
    End Sub
    Partial Private Sub OnRecipeCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeCategoryIDChanged()
    End Sub
    Partial Private Sub OnRecipeNMChanging(value As String)
    End Sub
    Partial Private Sub OnRecipeNMChanged()
    End Sub
    Partial Private Sub OnRecipeDSChanging(value As String)
    End Sub
    Partial Private Sub OnRecipeDSChanged()
    End Sub
    Partial Private Sub OnAuthorNMChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorNMChanged()
    End Sub
    Partial Private Sub OnIngredientDSChanging(value As String)
    End Sub
    Partial Private Sub OnIngredientDSChanged()
    End Sub
    Partial Private Sub OnInstructionDSChanging(value As String)
    End Sub
    Partial Private Sub OnInstructionDSChanged()
    End Sub
    Partial Private Sub OnIsApprovedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsApprovedChanged()
    End Sub
    Partial Private Sub OnModifiedDTChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedDTChanged()
    End Sub
    Partial Private Sub OnModifiedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModifiedIDChanged()
    End Sub
    Partial Private Sub OnViewCountChanging(value As Integer)
    End Sub
    Partial Private Sub OnViewCountChanged()
    End Sub
    Partial Private Sub OnAverageRatingChanging(value As Double)
    End Sub
    Partial Private Sub OnAverageRatingChanged()
    End Sub
    Partial Private Sub OnRatingCountChanging(value As Integer)
    End Sub
    Partial Private Sub OnRatingCountChanged()
    End Sub
    Partial Private Sub OnCommentCountChanging(value As Integer)
    End Sub
    Partial Private Sub OnCommentCountChanged()
    End Sub
    Partial Private Sub OnLastViewDTChanging(value As Date)
    End Sub
    Partial Private Sub OnLastViewDTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RecipeImages = New EntitySet(Of RecipeImage)(AddressOf Me.attach_RecipeImages, AddressOf Me.detach_RecipeImages)
		Me._RecipeComments = New EntitySet(Of RecipeComment)(AddressOf Me.attach_RecipeComments, AddressOf Me.detach_RecipeComments)
		Me._RecipeCategory = CType(Nothing, EntityRef(Of RecipeCategory))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecipeID() As Integer
		Get
			Return Me._RecipeID
		End Get
		Set
			If ((Me._RecipeID = value)  _
						= false) Then
				Me.OnRecipeIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeID = value
				Me.SendPropertyChanged("RecipeID")
				Me.OnRecipeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryID", DbType:="Int NOT NULL")>  _
	Public Property RecipeCategoryID() As Integer
		Get
			Return Me._RecipeCategoryID
		End Get
		Set
			If ((Me._RecipeCategoryID = value)  _
						= false) Then
				If Me._RecipeCategory.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRecipeCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeCategoryID = value
				Me.SendPropertyChanged("RecipeCategoryID")
				Me.OnRecipeCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeNM", DbType:="NVarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property RecipeNM() As String
		Get
			Return Me._RecipeNM
		End Get
		Set
			If (String.Equals(Me._RecipeNM, value) = false) Then
				Me.OnRecipeNMChanging(value)
				Me.SendPropertyChanging
				Me._RecipeNM = value
				Me.SendPropertyChanged("RecipeNM")
				Me.OnRecipeNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeDS", DbType:="NVarChar(500)")>  _
	Public Property RecipeDS() As String
		Get
			Return Me._RecipeDS
		End Get
		Set
			If (String.Equals(Me._RecipeDS, value) = false) Then
				Me.OnRecipeDSChanging(value)
				Me.SendPropertyChanging
				Me._RecipeDS = value
				Me.SendPropertyChanged("RecipeDS")
				Me.OnRecipeDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuthorNM", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AuthorNM() As String
		Get
			Return Me._AuthorNM
		End Get
		Set
			If (String.Equals(Me._AuthorNM, value) = false) Then
				Me.OnAuthorNMChanging(value)
				Me.SendPropertyChanging
				Me._AuthorNM = value
				Me.SendPropertyChanged("AuthorNM")
				Me.OnAuthorNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngredientDS", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property IngredientDS() As String
		Get
			Return Me._IngredientDS
		End Get
		Set
			If (String.Equals(Me._IngredientDS, value) = false) Then
				Me.OnIngredientDSChanging(value)
				Me.SendPropertyChanging
				Me._IngredientDS = value
				Me.SendPropertyChanged("IngredientDS")
				Me.OnIngredientDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InstructionDS", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property InstructionDS() As String
		Get
			Return Me._InstructionDS
		End Get
		Set
			If (String.Equals(Me._InstructionDS, value) = false) Then
				Me.OnInstructionDSChanging(value)
				Me.SendPropertyChanging
				Me._InstructionDS = value
				Me.SendPropertyChanged("InstructionDS")
				Me.OnInstructionDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsApproved", DbType:="Bit NOT NULL")>  _
	Public Property IsApproved() As Boolean
		Get
			Return Me._IsApproved
		End Get
		Set
			If ((Me._IsApproved = value)  _
						= false) Then
				Me.OnIsApprovedChanging(value)
				Me.SendPropertyChanging
				Me._IsApproved = value
				Me.SendPropertyChanged("IsApproved")
				Me.OnIsApprovedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me.OnModifiedDTChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDT = value
				Me.SendPropertyChanged("ModifiedDT")
				Me.OnModifiedDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me.OnModifiedIDChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedID = value
				Me.SendPropertyChanged("ModifiedID")
				Me.OnModifiedIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewCount", DbType:="Int NOT NULL")>  _
	Public Property ViewCount() As Integer
		Get
			Return Me._ViewCount
		End Get
		Set
			If ((Me._ViewCount = value)  _
						= false) Then
				Me.OnViewCountChanging(value)
				Me.SendPropertyChanging
				Me._ViewCount = value
				Me.SendPropertyChanged("ViewCount")
				Me.OnViewCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AverageRating", DbType:="Float NOT NULL")>  _
	Public Property AverageRating() As Double
		Get
			Return Me._AverageRating
		End Get
		Set
			If ((Me._AverageRating = value)  _
						= false) Then
				Me.OnAverageRatingChanging(value)
				Me.SendPropertyChanging
				Me._AverageRating = value
				Me.SendPropertyChanged("AverageRating")
				Me.OnAverageRatingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatingCount", DbType:="Int NOT NULL")>  _
	Public Property RatingCount() As Integer
		Get
			Return Me._RatingCount
		End Get
		Set
			If ((Me._RatingCount = value)  _
						= false) Then
				Me.OnRatingCountChanging(value)
				Me.SendPropertyChanging
				Me._RatingCount = value
				Me.SendPropertyChanged("RatingCount")
				Me.OnRatingCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentCount", DbType:="Int NOT NULL")>  _
	Public Property CommentCount() As Integer
		Get
			Return Me._CommentCount
		End Get
		Set
			If ((Me._CommentCount = value)  _
						= false) Then
				Me.OnCommentCountChanging(value)
				Me.SendPropertyChanging
				Me._CommentCount = value
				Me.SendPropertyChanged("CommentCount")
				Me.OnCommentCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastViewDT", DbType:="DateTime NOT NULL")>  _
	Public Property LastViewDT() As Date
		Get
			Return Me._LastViewDT
		End Get
		Set
			If ((Me._LastViewDT = value)  _
						= false) Then
				Me.OnLastViewDTChanging(value)
				Me.SendPropertyChanging
				Me._LastViewDT = value
				Me.SendPropertyChanged("LastViewDT")
				Me.OnLastViewDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Recipe_RecipeImage", Storage:="_RecipeImages", ThisKey:="RecipeID", OtherKey:="RecipeID")>  _
	Public Property RecipeImages() As EntitySet(Of RecipeImage)
		Get
			Return Me._RecipeImages
		End Get
		Set
			Me._RecipeImages.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Recipe_RecipeComment", Storage:="_RecipeComments", ThisKey:="RecipeID", OtherKey:="RecipeID")>  _
	Public Property RecipeComments() As EntitySet(Of RecipeComment)
		Get
			Return Me._RecipeComments
		End Get
		Set
			Me._RecipeComments.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RecipeCategory_Recipe", Storage:="_RecipeCategory", ThisKey:="RecipeCategoryID", OtherKey:="RecipeCategoryID", IsForeignKey:=true)>  _
	Public Property RecipeCategory() As RecipeCategory
		Get
			Return Me._RecipeCategory.Entity
		End Get
		Set
			Dim previousValue As RecipeCategory = Me._RecipeCategory.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._RecipeCategory.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._RecipeCategory.Entity = Nothing
					previousValue.Recipes.Remove(Me)
				End If
				Me._RecipeCategory.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Recipes.Add(Me)
					Me._RecipeCategoryID = value.RecipeCategoryID
				Else
					Me._RecipeCategoryID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("RecipeCategory")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RecipeImages(ByVal entity As RecipeImage)
		Me.SendPropertyChanging
		entity.Recipe = Me
	End Sub
	
	Private Sub detach_RecipeImages(ByVal entity As RecipeImage)
		Me.SendPropertyChanging
		entity.Recipe = Nothing
	End Sub
	
	Private Sub attach_RecipeComments(ByVal entity As RecipeComment)
		Me.SendPropertyChanging
		entity.Recipe = Me
	End Sub
	
	Private Sub detach_RecipeComments(ByVal entity As RecipeComment)
		Me.SendPropertyChanging
		entity.Recipe = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecipeImage")>  _
Partial Public Class RecipeImage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecipeImageID As Integer
	
	Private _RecipeID As Integer
	
	Private _FileName As String
	
	Private _FileDescription As String
	
	Private _DisplayOrder As Integer
	
	Private _ModifiedID As Integer
	
	Private _ModifiedDT As Date
	
	Private _Recipe As EntityRef(Of Recipe)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecipeImageIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeImageIDChanged()
    End Sub
    Partial Private Sub OnRecipeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeIDChanged()
    End Sub
    Partial Private Sub OnFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnFileNameChanged()
    End Sub
    Partial Private Sub OnFileDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnFileDescriptionChanged()
    End Sub
    Partial Private Sub OnDisplayOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnDisplayOrderChanged()
    End Sub
    Partial Private Sub OnModifiedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModifiedIDChanged()
    End Sub
    Partial Private Sub OnModifiedDTChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedDTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Recipe = CType(Nothing, EntityRef(Of Recipe))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeImageID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecipeImageID() As Integer
		Get
			Return Me._RecipeImageID
		End Get
		Set
			If ((Me._RecipeImageID = value)  _
						= false) Then
				Me.OnRecipeImageIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeImageID = value
				Me.SendPropertyChanged("RecipeImageID")
				Me.OnRecipeImageIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeID", DbType:="Int NOT NULL")>  _
	Public Property RecipeID() As Integer
		Get
			Return Me._RecipeID
		End Get
		Set
			If ((Me._RecipeID = value)  _
						= false) Then
				If Me._Recipe.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRecipeIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeID = value
				Me.SendPropertyChanged("RecipeID")
				Me.OnRecipeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me.OnFileNameChanging(value)
				Me.SendPropertyChanging
				Me._FileName = value
				Me.SendPropertyChanged("FileName")
				Me.OnFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileDescription", DbType:="NVarChar(255)")>  _
	Public Property FileDescription() As String
		Get
			Return Me._FileDescription
		End Get
		Set
			If (String.Equals(Me._FileDescription, value) = false) Then
				Me.OnFileDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._FileDescription = value
				Me.SendPropertyChanged("FileDescription")
				Me.OnFileDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayOrder", DbType:="Int NOT NULL")>  _
	Public Property DisplayOrder() As Integer
		Get
			Return Me._DisplayOrder
		End Get
		Set
			If ((Me._DisplayOrder = value)  _
						= false) Then
				Me.OnDisplayOrderChanging(value)
				Me.SendPropertyChanging
				Me._DisplayOrder = value
				Me.SendPropertyChanged("DisplayOrder")
				Me.OnDisplayOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me.OnModifiedIDChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedID = value
				Me.SendPropertyChanged("ModifiedID")
				Me.OnModifiedIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me.OnModifiedDTChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDT = value
				Me.SendPropertyChanged("ModifiedDT")
				Me.OnModifiedDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Recipe_RecipeImage", Storage:="_Recipe", ThisKey:="RecipeID", OtherKey:="RecipeID", IsForeignKey:=true)>  _
	Public Property Recipe() As Recipe
		Get
			Return Me._Recipe.Entity
		End Get
		Set
			Dim previousValue As Recipe = Me._Recipe.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Recipe.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Recipe.Entity = Nothing
					previousValue.RecipeImages.Remove(Me)
				End If
				Me._Recipe.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RecipeImages.Add(Me)
					Me._RecipeID = value.RecipeID
				Else
					Me._RecipeID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Recipe")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecipeComment")>  _
Partial Public Class RecipeComment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecipeCommentID As Integer
	
	Private _RecipeID As Integer
	
	Private _AuthorNM As String
	
	Private _AuthorEmail As String
	
	Private _Comment As String
	
	Private _ModifiedDT As Date
	
	Private _ModifiedID As Integer
	
	Private _Recipe As EntityRef(Of Recipe)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecipeCommentIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeCommentIDChanged()
    End Sub
    Partial Private Sub OnRecipeIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeIDChanged()
    End Sub
    Partial Private Sub OnAuthorNMChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorNMChanged()
    End Sub
    Partial Private Sub OnAuthorEmailChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorEmailChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnModifiedDTChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedDTChanged()
    End Sub
    Partial Private Sub OnModifiedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModifiedIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Recipe = CType(Nothing, EntityRef(Of Recipe))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCommentID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecipeCommentID() As Integer
		Get
			Return Me._RecipeCommentID
		End Get
		Set
			If ((Me._RecipeCommentID = value)  _
						= false) Then
				Me.OnRecipeCommentIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeCommentID = value
				Me.SendPropertyChanged("RecipeCommentID")
				Me.OnRecipeCommentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeID", DbType:="Int NOT NULL")>  _
	Public Property RecipeID() As Integer
		Get
			Return Me._RecipeID
		End Get
		Set
			If ((Me._RecipeID = value)  _
						= false) Then
				If Me._Recipe.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRecipeIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeID = value
				Me.SendPropertyChanged("RecipeID")
				Me.OnRecipeIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuthorNM", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property AuthorNM() As String
		Get
			Return Me._AuthorNM
		End Get
		Set
			If (String.Equals(Me._AuthorNM, value) = false) Then
				Me.OnAuthorNMChanging(value)
				Me.SendPropertyChanging
				Me._AuthorNM = value
				Me.SendPropertyChanged("AuthorNM")
				Me.OnAuthorNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuthorEmail", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AuthorEmail() As String
		Get
			Return Me._AuthorEmail
		End Get
		Set
			If (String.Equals(Me._AuthorEmail, value) = false) Then
				Me.OnAuthorEmailChanging(value)
				Me.SendPropertyChanging
				Me._AuthorEmail = value
				Me.SendPropertyChanged("AuthorEmail")
				Me.OnAuthorEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me.OnModifiedDTChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDT = value
				Me.SendPropertyChanged("ModifiedDT")
				Me.OnModifiedDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me.OnModifiedIDChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedID = value
				Me.SendPropertyChanged("ModifiedID")
				Me.OnModifiedIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Recipe_RecipeComment", Storage:="_Recipe", ThisKey:="RecipeID", OtherKey:="RecipeID", IsForeignKey:=true)>  _
	Public Property Recipe() As Recipe
		Get
			Return Me._Recipe.Entity
		End Get
		Set
			Dim previousValue As Recipe = Me._Recipe.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Recipe.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Recipe.Entity = Nothing
					previousValue.RecipeComments.Remove(Me)
				End If
				Me._Recipe.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RecipeComments.Add(Me)
					Me._RecipeID = value.RecipeID
				Else
					Me._RecipeID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Recipe")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecipeCategory")>  _
Partial Public Class RecipeCategory
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RecipeCategoryID As Integer
	
	Private _RecipeCategoryNM As String
	
	Private _RecipeCategoryCM As String
	
	Private _DisplayOrder As Integer
	
	Private _IsActive As Boolean
	
	Private _ModifiedID As Integer
	
	Private _ModifiedDT As Date
	
	Private _Recipes As EntitySet(Of Recipe)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRecipeCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecipeCategoryIDChanged()
    End Sub
    Partial Private Sub OnRecipeCategoryNMChanging(value As String)
    End Sub
    Partial Private Sub OnRecipeCategoryNMChanged()
    End Sub
    Partial Private Sub OnRecipeCategoryCMChanging(value As String)
    End Sub
    Partial Private Sub OnRecipeCategoryCMChanged()
    End Sub
    Partial Private Sub OnDisplayOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnDisplayOrderChanged()
    End Sub
    Partial Private Sub OnIsActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsActiveChanged()
    End Sub
    Partial Private Sub OnModifiedIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModifiedIDChanged()
    End Sub
    Partial Private Sub OnModifiedDTChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedDTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Recipes = New EntitySet(Of Recipe)(AddressOf Me.attach_Recipes, AddressOf Me.detach_Recipes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RecipeCategoryID() As Integer
		Get
			Return Me._RecipeCategoryID
		End Get
		Set
			If ((Me._RecipeCategoryID = value)  _
						= false) Then
				Me.OnRecipeCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._RecipeCategoryID = value
				Me.SendPropertyChanged("RecipeCategoryID")
				Me.OnRecipeCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryNM", DbType:="NVarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property RecipeCategoryNM() As String
		Get
			Return Me._RecipeCategoryNM
		End Get
		Set
			If (String.Equals(Me._RecipeCategoryNM, value) = false) Then
				Me.OnRecipeCategoryNMChanging(value)
				Me.SendPropertyChanging
				Me._RecipeCategoryNM = value
				Me.SendPropertyChanged("RecipeCategoryNM")
				Me.OnRecipeCategoryNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryCM", DbType:="NVarChar(1500)")>  _
	Public Property RecipeCategoryCM() As String
		Get
			Return Me._RecipeCategoryCM
		End Get
		Set
			If (String.Equals(Me._RecipeCategoryCM, value) = false) Then
				Me.OnRecipeCategoryCMChanging(value)
				Me.SendPropertyChanging
				Me._RecipeCategoryCM = value
				Me.SendPropertyChanged("RecipeCategoryCM")
				Me.OnRecipeCategoryCMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayOrder", DbType:="Int NOT NULL")>  _
	Public Property DisplayOrder() As Integer
		Get
			Return Me._DisplayOrder
		End Get
		Set
			If ((Me._DisplayOrder = value)  _
						= false) Then
				Me.OnDisplayOrderChanging(value)
				Me.SendPropertyChanging
				Me._DisplayOrder = value
				Me.SendPropertyChanged("DisplayOrder")
				Me.OnDisplayOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit NOT NULL")>  _
	Public Property IsActive() As Boolean
		Get
			Return Me._IsActive
		End Get
		Set
			If ((Me._IsActive = value)  _
						= false) Then
				Me.OnIsActiveChanging(value)
				Me.SendPropertyChanging
				Me._IsActive = value
				Me.SendPropertyChanged("IsActive")
				Me.OnIsActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me.OnModifiedIDChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedID = value
				Me.SendPropertyChanged("ModifiedID")
				Me.OnModifiedIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me.OnModifiedDTChanging(value)
				Me.SendPropertyChanging
				Me._ModifiedDT = value
				Me.SendPropertyChanged("ModifiedDT")
				Me.OnModifiedDTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RecipeCategory_Recipe", Storage:="_Recipes", ThisKey:="RecipeCategoryID", OtherKey:="RecipeCategoryID")>  _
	Public Property Recipes() As EntitySet(Of Recipe)
		Get
			Return Me._Recipes
		End Get
		Set
			Me._Recipes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Recipes(ByVal entity As Recipe)
		Me.SendPropertyChanging
		entity.RecipeCategory = Me
	End Sub
	
	Private Sub detach_Recipes(ByVal entity As Recipe)
		Me.SendPropertyChanging
		entity.RecipeCategory = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwRecipe")>  _
Partial Public Class vwRecipe
	
	Private _RecipeID As Integer
	
	Private _RecipeCategoryID As Integer
	
	Private _RecipeCategoryNM As String
	
	Private _RecipeNM As String
	
	Private _RecipeDS As String
	
	Private _AuthorNM As String
	
	Private _IngredientDS As String
	
	Private _InstructionDS As String
	
	Private _IsApproved As Boolean
	
	Private _ModifiedDT As Date
	
	Private _ModifiedID As Integer
	
	Private _ViewCount As Integer
	
	Private _AverageRating As Double
	
	Private _RatingCount As Integer
	
	Private _LastViewDT As Date
	
	Private _FileName As String
	
	Private _FileDescription As String
	
	Private _CommentCount As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeID", DbType:="Int NOT NULL")>  _
	Public Property RecipeID() As Integer
		Get
			Return Me._RecipeID
		End Get
		Set
			If ((Me._RecipeID = value)  _
						= false) Then
				Me._RecipeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryID", DbType:="Int NOT NULL")>  _
	Public Property RecipeCategoryID() As Integer
		Get
			Return Me._RecipeCategoryID
		End Get
		Set
			If ((Me._RecipeCategoryID = value)  _
						= false) Then
				Me._RecipeCategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryNM", DbType:="NVarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property RecipeCategoryNM() As String
		Get
			Return Me._RecipeCategoryNM
		End Get
		Set
			If (String.Equals(Me._RecipeCategoryNM, value) = false) Then
				Me._RecipeCategoryNM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeNM", DbType:="NVarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property RecipeNM() As String
		Get
			Return Me._RecipeNM
		End Get
		Set
			If (String.Equals(Me._RecipeNM, value) = false) Then
				Me._RecipeNM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeDS", DbType:="NVarChar(500)")>  _
	Public Property RecipeDS() As String
		Get
			Return Me._RecipeDS
		End Get
		Set
			If (String.Equals(Me._RecipeDS, value) = false) Then
				Me._RecipeDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AuthorNM", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AuthorNM() As String
		Get
			Return Me._AuthorNM
		End Get
		Set
			If (String.Equals(Me._AuthorNM, value) = false) Then
				Me._AuthorNM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngredientDS", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property IngredientDS() As String
		Get
			Return Me._IngredientDS
		End Get
		Set
			If (String.Equals(Me._IngredientDS, value) = false) Then
				Me._IngredientDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InstructionDS", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property InstructionDS() As String
		Get
			Return Me._InstructionDS
		End Get
		Set
			If (String.Equals(Me._InstructionDS, value) = false) Then
				Me._InstructionDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsApproved", DbType:="Bit NOT NULL")>  _
	Public Property IsApproved() As Boolean
		Get
			Return Me._IsApproved
		End Get
		Set
			If ((Me._IsApproved = value)  _
						= false) Then
				Me._IsApproved = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me._ModifiedDT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me._ModifiedID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewCount", DbType:="Int NOT NULL")>  _
	Public Property ViewCount() As Integer
		Get
			Return Me._ViewCount
		End Get
		Set
			If ((Me._ViewCount = value)  _
						= false) Then
				Me._ViewCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AverageRating", DbType:="Float NOT NULL")>  _
	Public Property AverageRating() As Double
		Get
			Return Me._AverageRating
		End Get
		Set
			If ((Me._AverageRating = value)  _
						= false) Then
				Me._AverageRating = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RatingCount", DbType:="Int NOT NULL")>  _
	Public Property RatingCount() As Integer
		Get
			Return Me._RatingCount
		End Get
		Set
			If ((Me._RatingCount = value)  _
						= false) Then
				Me._RatingCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastViewDT", DbType:="DateTime NOT NULL")>  _
	Public Property LastViewDT() As Date
		Get
			Return Me._LastViewDT
		End Get
		Set
			If ((Me._LastViewDT = value)  _
						= false) Then
				Me._LastViewDT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NVarChar(50)")>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me._FileName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileDescription", DbType:="NVarChar(255)")>  _
	Public Property FileDescription() As String
		Get
			Return Me._FileDescription
		End Get
		Set
			If (String.Equals(Me._FileDescription, value) = false) Then
				Me._FileDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentCount", DbType:="Int")>  _
	Public Property CommentCount() As System.Nullable(Of Integer)
		Get
			Return Me._CommentCount
		End Get
		Set
			If (Me._CommentCount.Equals(value) = false) Then
				Me._CommentCount = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.vwRecipeCategory")>  _
Partial Public Class vwRecipeCategory
	
	Private _RecipeCategoryID As Integer
	
	Private _RecipeCategoryNM As String
	
	Private _RecipeCategoryCM As String
	
	Private _ModifiedID As Integer
	
	Private _ModifiedDT As Date
	
	Private _DisplayOrder As Integer
	
	Private _RecipeID As System.Nullable(Of Integer)
	
	Private _RecipeNM As String
	
	Private _RecipeDS As String
	
	Private _FileName As String
	
	Private _FileDescription As String
	
	Private _RecipeCount As System.Nullable(Of Integer)
	
	Private _NewestRecipeDT As System.Nullable(Of Date)
	
	Private _IsActive As Boolean
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryID", DbType:="Int NOT NULL")>  _
	Public Property RecipeCategoryID() As Integer
		Get
			Return Me._RecipeCategoryID
		End Get
		Set
			If ((Me._RecipeCategoryID = value)  _
						= false) Then
				Me._RecipeCategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryNM", DbType:="NVarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property RecipeCategoryNM() As String
		Get
			Return Me._RecipeCategoryNM
		End Get
		Set
			If (String.Equals(Me._RecipeCategoryNM, value) = false) Then
				Me._RecipeCategoryNM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCategoryCM", DbType:="NVarChar(1500)")>  _
	Public Property RecipeCategoryCM() As String
		Get
			Return Me._RecipeCategoryCM
		End Get
		Set
			If (String.Equals(Me._RecipeCategoryCM, value) = false) Then
				Me._RecipeCategoryCM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedID", DbType:="Int NOT NULL")>  _
	Public Property ModifiedID() As Integer
		Get
			Return Me._ModifiedID
		End Get
		Set
			If ((Me._ModifiedID = value)  _
						= false) Then
				Me._ModifiedID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedDT", DbType:="DateTime NOT NULL")>  _
	Public Property ModifiedDT() As Date
		Get
			Return Me._ModifiedDT
		End Get
		Set
			If ((Me._ModifiedDT = value)  _
						= false) Then
				Me._ModifiedDT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayOrder", DbType:="Int NOT NULL")>  _
	Public Property DisplayOrder() As Integer
		Get
			Return Me._DisplayOrder
		End Get
		Set
			If ((Me._DisplayOrder = value)  _
						= false) Then
				Me._DisplayOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeID", DbType:="Int")>  _
	Public Property RecipeID() As System.Nullable(Of Integer)
		Get
			Return Me._RecipeID
		End Get
		Set
			If (Me._RecipeID.Equals(value) = false) Then
				Me._RecipeID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeNM", DbType:="NVarChar(150)")>  _
	Public Property RecipeNM() As String
		Get
			Return Me._RecipeNM
		End Get
		Set
			If (String.Equals(Me._RecipeNM, value) = false) Then
				Me._RecipeNM = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeDS", DbType:="NVarChar(500)")>  _
	Public Property RecipeDS() As String
		Get
			Return Me._RecipeDS
		End Get
		Set
			If (String.Equals(Me._RecipeDS, value) = false) Then
				Me._RecipeDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="NVarChar(50)")>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me._FileName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileDescription", DbType:="NVarChar(255)")>  _
	Public Property FileDescription() As String
		Get
			Return Me._FileDescription
		End Get
		Set
			If (String.Equals(Me._FileDescription, value) = false) Then
				Me._FileDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecipeCount", DbType:="Int")>  _
	Public Property RecipeCount() As System.Nullable(Of Integer)
		Get
			Return Me._RecipeCount
		End Get
		Set
			If (Me._RecipeCount.Equals(value) = false) Then
				Me._RecipeCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewestRecipeDT", DbType:="DateTime")>  _
	Public Property NewestRecipeDT() As System.Nullable(Of Date)
		Get
			Return Me._NewestRecipeDT
		End Get
		Set
			If (Me._NewestRecipeDT.Equals(value) = false) Then
				Me._NewestRecipeDT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsActive", DbType:="Bit NOT NULL")>  _
	Public Property IsActive() As Boolean
		Get
			Return Me._IsActive
		End Get
		Set
			If ((Me._IsActive = value)  _
						= false) Then
				Me._IsActive = value
			End If
		End Set
	End Property
End Class
